/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */
/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    behaviors {
        #include "macros.dtsi"
        #include "version.dtsi"
        #ifndef VERSION_MACRO

        macro_ver: macro_ver {
            compatible = "zmk,behavior-macro";
            label = "macro_version";
            #binding-cells = <0>;
            bindings = <&kp RET>;
        };

        #endif

        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <250>;
            quick_tap_ms = <175>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
        };

        tap_dance_esc_layer_behavior: tap_dance_esc_layer_behavior {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_ESC_LAYER_BEHAVIOR";
            #binding-cells = <0>;
            bindings = <&kp ESCAPE>, <&to 0>;
        };
    };

    macros {
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp EQUAL  &kp N1              &kp N2          &kp N3       &kp N4            &kp N5  &tog 1                                                                                  &mo 5                  &kp N6  &kp N7             &kp N8               &kp N9           &kp N0                       &kp MINUS
&kp TAB    &kp Q               &kp W           &kp E        &kp R             &kp T   &none                                                                                   &none                  &kp Y   &kp U              &kp I                &kp O            &kp P                        &kp BSLH
&kp ESC    &hm LEFT_COMMAND A  &hm LEFT_ALT S  &hm LCTRL D  &hm LEFT_SHIFT F  &kp G   &none                     &kp ESCAPE  &lt 1 LEFT_ALT      &kp RIGHT_COMMAND  &kp RCTRL  &none                  &kp H   &hm RIGHT_SHIFT J  &hm RIGHT_CONTROL K  &hm RIGHT_ALT L  &hm RIGHT_COMMAND SEMICOLON  &kp SQT
&kp LSHFT  &kp Z               &kp X           &kp C        &kp V             &kp B                                         &lt 2 HOME          &kp PG_UP                                            &kp N   &kp M              &kp COMMA            &kp DOT          &kp FSLH                     &kp RSHFT
&mo 3      &kp GRAVE           &kp CAPS        &kp LEFT     &kp RIGHT                 &hm LEFT_SHIFT BACKSPACE  &kp DEL     &lt 3 END           &kp PG_DN          &kp ENTER  &hm RIGHT_SHIFT SPACE          &kp UP             &kp DOWN             &kp LBKT         &kp RBKT                     &mo 3
            >;
        };

        layer_keypad {
            bindings = <
&kp EQUAL  &kp N1     &kp N2    &kp N3    &kp N4     &kp N5  &trans                                                   &mo 5      &kp N6  &kp KP_NUM  &kp KP_EQUAL  &kp KP_DIVIDE  &kp KP_MULTIPLY  &kp MINUS
&kp TAB    &kp Q      &kp W     &kp E     &kp R      &kp T   &none                                                    &none      &kp Y   &kp KP_N7   &kp KP_N8     &kp KP_N9      &kp KP_MINUS     &kp BSLH
&kp ESC    &kp A      &kp S     &kp D     &kp F      &kp G   &none     &kp LCTRL  &kp LALT      &kp LGUI   &kp RCTRL  &none      &kp H   &kp KP_N4   &kp KP_N5     &kp KP_N6      &kp KP_PLUS      &kp SQT
&kp LSHFT  &kp Z      &kp X     &kp C     &kp V      &kp B                        &kp HOME      &kp PG_UP                        &kp N   &kp KP_N1   &kp KP_N2     &kp KP_N3      &kp KP_ENTER     &kp RSHFT
&mo 3      &kp GRAVE  &kp CAPS  &kp LEFT  &kp RIGHT          &kp BSPC  &kp DEL    &kp END       &kp PG_DN  &kp ENTER  &kp KP_N0          &kp UP      &kp DOWN      &kp KP_DOT     &kp RBKT         &mo 3
            >;
        };

        layer_cursor {
            bindings = <
&trans  &trans            &trans               &trans                   &trans          &trans     &trans                                                                       &trans     &trans     &trans          &trans          &trans         &trans           &trans
&trans  &trans            &kp LS(LG(Z))        &kp LG(Z)                &trans          &kp LG(X)  &trans                                                                       &trans     &kp RG(X)  &trans          &kp RG(Z)       &kp RS(RG(Z))  &trans           &trans
&trans  &kp LEFT_COMMAND  &kp LEFT_ALT         &kp LEFT_CONTROL         &kp LEFT_SHIFT  &kp LG(C)  &trans         &tap_dance_esc_layer_behavior  &to 1       &trans  &trans     &trans     &kp RG(C)  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW   &kp RIGHT_ARROW  &trans
&trans  &kp LG(A)         &kp LG(RIGHT_ARROW)  &kp LS(LA(RIGHT_ARROW))  &trans          &kp LG(V)                                                &trans      &trans                        &kp RG(V)  &kp HOME        &kp PAGE_UP     &kp PAGE_DOWN  &kp END          &trans
&trans  &trans            &trans               &trans                   &trans                     &kp BACKSPACE  &kp DELETE                     &to 3       &trans  &kp ENTER  &kp SPACE             &kp RG(F)       &kp RS(RG(G))   &kp RG(G)      &trans           &trans
            >;
        };

        layer_fn {
            bindings = <
&trans  &trans            &trans               &trans                   &trans          &trans  &tog 1                                                                        &trans     &trans  &trans  &trans  &trans   &trans  &trans
&trans  &trans            &kp LS(LG(Z))        &kp LG(Z)                &trans          &trans  &none                                                                         &none      &kp F7  &kp F8  &kp F9  &kp F10  &trans  &trans
&trans  &kp LEFT_COMMAND  &kp LEFT_ALT         &kp LEFT_CONTROL         &kp LEFT_SHIFT  &trans  &none          &tap_dance_esc_layer_behavior  &to 1        &trans  &trans     &none      &kp F4  &kp F5  &kp F6  &kp F11  &trans  &trans
&trans  &kp LG(A)         &kp LG(RIGHT_ARROW)  &kp LS(LA(RIGHT_ARROW))  &trans          &trans                                                &to 2        &trans                        &kp F1  &kp F2  &kp F3  &kp F12  &trans  &trans
&trans  &trans            &trans               &trans                   &trans                  &kp BACKSPACE  &kp DELETE                     &kp END      &trans  &kp ENTER  &kp SPACE          &trans  &trans  &trans   &trans  &trans
            >;
        };

        layer_Symbol {
            bindings = <
&trans           &kp GRAVE       &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp SEMICOLON     &kp COMMA     &trans                                                                &trans     &trans  &trans  &trans  &trans  &trans  &trans
&kp EXCLAMATION  &kp LEFT_BRACE  &kp SINGLE_QUOTE      &kp DOUBLE_QUOTES      &kp RIGHT_BRACE   &kp QUESTION  &trans                                                                &trans     &trans  &trans  &trans  &trans  &trans  &trans
&kp HASH         &kp CARET       &kp EQUAL             &kp UNDERSCORE         &kp DOLLAR        &kp ASTERISK  &trans  &tap_dance_esc_layer_behavior  &trans      &trans  &trans     &trans     &trans  &trans  &trans  &trans  &trans  &trans
&kp AT_SIGN      &kp LESS_THAN   &kp PIPE              &kp MINUS              &kp GREATER_THAN  &kp SLASH                                            &trans      &trans                        &trans  &trans  &trans  &trans  &trans  &trans
&kp TILDE        &kp AMPERSAND   &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp PLUS                        &trans  &trans                         &trans      &trans  &kp ENTER  &kp SPACE          &trans  &trans  &trans  &trans  &trans
            >;
        };

        layer_mod {
            bindings = <
&none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &none                                                  &trans                  &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none         &none         &bootloader                                            &bootloader             &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none         &none         &none        &none  &none      &bt BT_CLR  &none       &rgb_ug RGB_MEFS_CMD 5  &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none         &none                             &none      &none                                           &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none                       &none        &none  &none      &none       &bl BL_TOG  &rgb_ug RGB_TOG                &bl BL_INC  &bl BL_DEC  &none  &none  &none
            >;
        };
    };
};
